import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import joblib

# i. Data Preparation
iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = pd.Series(iris.target)

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# ii. & iii. Model Training and Hyperparameter Tuning
# Trying different max_depth values
depth_values = [2, 3, 4]
version = 1

for depth in depth_values:
    model = DecisionTreeClassifier(max_depth=depth)
    model.fit(X_train, y_train)

    # Predict and Evaluate
    y_pred = model.predict(X_test)
    accuracy = accuracy_score(y_test, y_pred)

    # iv. Record the Results
    print(f"Model Version {version} | max_depth={depth} | Accuracy={accuracy:.2f}")

    # v. Model Versioning - Save the model
    model_filename = f"model_v{version}.pkl"
    joblib.dump(model, model_filename)

    version += 1
